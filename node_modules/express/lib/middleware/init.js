/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2013 Roman Shtylman
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict';

/**
 * Module dependencies.
 * This section imports required modules, in this case, the 'setprototypeof' module.
 * The '@private' tag indicates that this import is an internal implementation detail.
 */

var setPrototypeOf = require('setprototypeof')

/**
 * Initialization middleware, exposing the
 * request and response to each other, as well
 * as defaulting the X-Powered-By header field.
 *
 * @param {Function} app - The main Express application object.
 * @return {Function} A middleware function that initializes the request and response objects.
 * @api private - This function is intended for internal use within the Express module.
 */

exports.init = function(app){
  return function expressInit(req, res, next){
    // Check if the 'x-powered-by' setting is enabled and set the header accordingly.
    if (app.enabled('x-powered-by')) res.setHeader('X-Powered-By', 'Express');

    // Link the request and response objects together.
    req.res = res;
    res.req = req;
    req.next = next;

    // Set the prototype of the request and response objects to the corresponding prototype
    // defined in the Express application object.
    setPrototypeOf(req, app.request)
    setPrototypeOf(res, app.response)

    // Initialize the 'locals' property on the response object as a new empty object.
    res.locals = res.locals || Object.create(null);

    // Call the next middleware function in the stack.
    next();
  };
};

