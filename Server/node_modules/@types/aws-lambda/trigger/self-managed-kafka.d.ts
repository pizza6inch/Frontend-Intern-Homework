import { Handler } from "../handler"; // Importing the Handler type from "../handler"

// Defining the SelfManagedKafkaHandler type which is a Handler with the input as SelfManagedKafkaEvent and output as void
export type SelfManagedKafkaHandler = Handler<SelfManagedKafkaEvent, void>;

// Interface for a SelfManagedKafkaRecordHeader which is a map of header keys to number arrays
export interface SelfManagedKafkaRecordHeader {
    [headerKey: string]: number[];
}

// Interface for a SelfManagedKafkaRecord which contains the topic, partition, offset, timestamp, timestampType, key, value, and headers of a Kafka record
export interface SelfManagedKafkaRecord {
    topic: string; // The name of the Kafka topic
    partition: number; // The partition number of the Kafka record
    offset: number; // The offset of the Kafka record
    timestamp: number; // The timestamp of the Kafka record
    timestampType: "CREATE_TIME" | "LOG_APPEND_TIME"; // The type of timestamp for the Kafka record
    key: string; // The key of the Kafka record
    value: string; // The value of the Kafka record
    headers: SelfManagedKafkaRecordHeader[]; // An array of headers for the Kafka record
}

// Interface for a SelfManagedKafkaEvent which contains the eventSource, bootstrapServers, and records of a Kafka event
// The eventSource is set to "SelfManagedKafka", bootstrapServers contains the addresses of the Kafka brokers, and records contains the Kafka records grouped by topic
export interface SelfManagedKafkaEvent {
    eventSource: "SelfManagedKafka"; // The source of the event, set to "SelfManagedKafka"
    bootstrapServers: string; // The addresses of the Kafka brokers
    records: { // The Kafka records grouped by topic
        [topic: string]: SelfManagedKafkaRecord[]; // A map of topic names to arrays of Kafka records
    };
}

// The provided link is for AWS Lambda with Kafka integration documentation
// https://docs.aws.amazon.com/lambda/
