/// <reference types="node" />

interface MIMEType {
  /// The main type of the MIME type (e.g., "text", "image", "video").
  type: string;

  /// The subtype of the MIME type (e.g., "plain", "jpeg", "mp4").
  subtype: string;

  /// A map containing any parameters associated with the MIME type.
  parameters: Map<string, string>;

  /// A string representing the essence of the MIME type.
  essence: string;
}

/**
 * Parses a string into a {@link MIMEType} object. If the string cannot be
 * parsed, the function returns the string 'failure'.
 * 
 * @param input - The string to parse. This should be a valid MIME type as
 * defined by the MIME Sniffing specification.
 * @returns A {@link MIMEType} object representing the parsed MIME type, or
 * the string 'failure' if the input cannot be parsed.
 * @see https://mimesniff.spec.whatwg.org/#parse-a-mime-type
 */
export function parseMIMEType(input: string): 'failure' | MIMEType {
  // Implementation here
}

/**
 * Converts a {@link MIMEType} object into a string.
 *
 * @param mimeType - The MIMEType object to convert.
 * @returns A string representing the MIME type.
 * @see https://mimesniff.spec.whatwg.org/#serialize-a-mime-type
 */
export function serializeAMimeType(mimeType: MIMEType): string {
  // Implementation here
}
