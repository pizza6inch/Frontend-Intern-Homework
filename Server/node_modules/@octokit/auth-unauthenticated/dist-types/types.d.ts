// Import all types from "@octokit/types" module and re-export them with more convenient names
import * as OctokitTypes from "@octokit/types";

// AnyResponse type represents an Octokit response with any payload
export type AnyResponse = OctokitTypes.OctokitResponse<any>;

// StrategyInterface type represents a strategy interface with specific options and authentication
export type StrategyInterface = OctokitTypes.StrategyInterface<[
    Options // Options type is passed as a generic type parameter
], [
], Authentication // Authentication type is passed as a generic type parameter
>;

// EndpointDefaults type represents default values for endpoint options
export type EndpointDefaults = OctokitTypes.EndpointDefaults;

// EndpointOptions type represents options for an endpoint
export type EndpointOptions = OctokitTypes.EndpointOptions;

// RequestParameters type represents parameters for a request
export type RequestParameters = OctokitTypes.RequestParameters;

// RequestInterface type represents an interface for making a request
export type RequestInterface = OctokitTypes.RequestInterface;

// Route type represents a route with a URL and method
export type Route = OctokitTypes.Route;

// Options type represents an object with a single property "reason" of type string
export type Options = {
    reason: string;
};

// Authentication type represents an object with a single property "type" of type string and a "reason" property of type string
export type Authentication = {
    type: "unauthenticated";
    reason: string;
};
