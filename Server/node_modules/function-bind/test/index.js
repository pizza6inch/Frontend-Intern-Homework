// jscs:disable requireUseStrict

var test = require('tape');

// functionBind is a function imported from the implementation file
var functionBind = require('../implementation');

// getCurrentContext is a function that returns the current context (this)
var getCurrentContext = function () { return this; };

test('functionBind is a function', function (t) {
    // Testing if functionBind is a function
    t.equal(typeof functionBind, 'function');
    t.end();
});

test('non-functions', function (t) {
    // Testing functionBind with non-function inputs
    var nonFunctions = [true, false, [], {}, 42, 'foo', NaN, /a/g];
    t.plan(nonFunctions.length);
    for (var i = 0; i < nonFunctions.length; ++i) {
        try { functionBind.call(nonFunctions[i]); } catch (ex) {
            // Checking if TypeError is thrown when functionBind is called with non-function inputs
            t.ok(ex instanceof TypeError, 'throws when given ' + String(nonFunctions[i]));
        }
    }
    t.end();
});

// ... (other tests follow)
