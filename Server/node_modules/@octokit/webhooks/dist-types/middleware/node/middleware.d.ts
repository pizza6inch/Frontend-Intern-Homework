// Define a type alias 'IncomingMessage' which is of type 'any'.
// This type is commonly used to represent an HTTP request object.
type IncomingMessage = any;

// Define a type alias 'ServerResponse' which is of type 'any'.
// This type is commonly used to represent an HTTP response object.
type ServerResponse = any;

// Import the 'Webhooks' type from '../../index.js' module.
import type { Webhooks } from "../../index.js";

// Import the 'MiddlewareOptions' type from './types.js' module.
import type { MiddlewareOptions } from "./types.js";

// Declare a function 'middleware' with four parameters:
// 'webhooks' of type 'Webhooks',
// 'options' of type 'Required<MiddlewareOptions>',
// 'request' of type 'IncomingMessage', and
// 'response' of type 'ServerResponse'.
// The function also accepts an optional parameter 'next' of type 'Function'.
// The function returns a Promise that resolves to a boolean value.
export declare function middleware(webhooks: Webhooks, options: Required<MiddlewareOptions>, request: IncomingMessage, response: ServerResponse, next?: Function): Promise<boolean>;

// Export an empty object to satisfy TypeScript module syntax.
export {};

