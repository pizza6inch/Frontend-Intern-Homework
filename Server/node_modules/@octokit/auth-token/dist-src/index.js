// Import the 'auth' and 'hook' functions from their respective modules.
import { auth } from "./auth";
import { hook } from "./hook";

// The 'createTokenAuth' function takes a token as an argument and returns an
// authenticated instance of the Octokit client.
const createTokenAuth = function createTokenAuth2(token) {
  // If no token is provided, throw an error.
  if (!token) {
    throw new Error(
      "[@octokit/auth-token] No token passed to createTokenAuth"
    );
  }
  
  // If the token is not a string, throw an error.
  if (typeof token !== "string") {
    throw new Error(
      "[@octokit/auth-token] Token passed to createTokenAuth is not a string"
    );
  }
  
  // Remove any 'token' or 'bearer' prefix from the token and store it in the 'token' variable.
  token = token.replace(/^(token|bearer) +/i, "");

  // Return a new object that combines the authenticated instance of the Octokit client with the 'hook' function.
  return Object.assign(auth.bind(null, token), {
    hook: hook.bind(null, token)
  });
};

// Export the 'createTokenAuth' function for use in other modules.
export {
  createTokenAuth
};
