// This module exports several functions related to creating Blob and File objects from a file path.

// Exports the blobFromSync function as the default export.
export default blobFromSync;

/**
 * Creates a Blob object from a file at the given path.
 * Optionally, a mimetype can be specified.
 *
 * @param {string} path - The filepath of the file on the disk.
 * @param {string} [type] - The mimetype to use for the Blob. If not provided, the mimetype will be inferred from the file.
 * @returns {Blob} - A Blob object representing the file at the given path.
 */
export function blobFromSync(path: string, type?: string): Blob;

// Imports File and Blob classes from their respective modules.
import File from "./file.js";
import Blob from "./index.js";

/**
 * Creates a Promise that resolves to a Blob object from a file at the given path.
 * Optionally, a mimetype can be specified.
 *
 * @param {string} path - The filepath of the file on the disk.
 * @param {string} [type] - The mimetype to use for the Blob. If not provided, the mimetype will be inferred from the file.
 * @returns {Promise<Blob>} - A Promise that resolves to a Blob object representing the file at the given path.
 */
export function blobFrom(path: string, type?: string): Promise<Blob>;

/**
 * Creates a Promise that resolves to a File object from a file at the given path.
 * Optionally, a mimetype can be specified.
 *
 * @param {string} path - The filepath of the file on the disk.
 * @param {string} [type] - The mimetype to use for the File. If not provided, the mimetype will be inferred from the file.
 * @returns {Promise<File>} - A Promise that resolves to a File object representing the file at the given path.
 */
export function fileFrom(path: string, type?: string): Promise<File>;

/**
