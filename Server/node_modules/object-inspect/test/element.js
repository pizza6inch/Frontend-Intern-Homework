// Import the 'inspect' module that provides a custom inspect function for
// formatting objects for logging.
var inspect = require('../');

// Import the 'tape' module for testing the 'inspect' function.
var test = require('tape');

// The first test suite checks the 'element' object with one attribute.
test('element', function (t) {
    // The 't' object is a Test object that provides methods to assert
    // equality, set up and clean up test fixtures, and control the test
    // flow.
    t.plan(3); // Indicate that there will be three assertions in this test case.

    // Define the 'elem' object, which represents an HTML element with
    // one attribute 'class' and a value 'row'.
    var elem = {
        nodeName: 'div', // The name of the HTML element.
        attributes: [{ name: 'class', value: 'row' }], // The list of attributes of the HTML element.
        childNodes: [] // The list of child nodes of the HTML element.
    };

    // Define the 'obj' array, which contains three elements: a number,
    // the 'elem' object, and another number.
    var obj = [1, elem, 3];

    // The first assertion checks that the 'inspect' function returns the
    // expected string representation of the 'obj' array with double quotes
    // for strings.
    t.deepEqual(inspect(obj), '[ 1, <div class="row"></div>, 3 ]');

    // The second assertion checks that the 'inspect' function returns the
    // expected string representation of the 'obj' array with single quotes
    // for strings.
    t.deepEqual(inspect(obj, { quoteStyle: 'single' }), "[ 1, <div class='row'></div>, 3 ]");

    // The third assertion checks that the 'inspect' function returns the
    // expected string representation of the 'obj' array with double quotes
    // for strings.
    t.deepEqual(inspect(obj, { quoteStyle: 'double' }), '[ 1, <div class="row"></div>, 3 ]');
});

// The second test suite checks the 'element' object with no attributes.
test('element no attr', function (t) {
    t.plan(1); // Indicate that there will be one assertion in this test case.

    // Define the 'elem' object, which represents an HTML element with no
    // attributes.
    var elem = {
        nodeName: 'div',
        childNodes: []
    };

    //
