import type { EndpointInterface } from "./EndpointInterface";
import type { OctokitResponse } from "./OctokitResponse";
import type { RequestParameters } from "./RequestParameters";
import type { Route } from "./Route";
import type { Endpoints } from "./generated/Endpoints";

export interface RequestInterface<D extends object = object> {
    /**
     * Sends a request based on endpoint options.
     * The `options` parameter must include the `method` and `url`,
     * as well as any additional URL, query, or body parameters,
     * headers, media type format or previews, request, or base URL.
     *
     * @param options - Object containing request options.
     * @returns A promise that resolves to the response from the Octokit API.
     */
    <T = any, O extends RequestParameters = RequestParameters>(options: O & {
        method?: string;
    } & ("url" extends keyof D ? {
        url?: string;
    } : {
        url: string;
    })): Promise<OctokitResponse<T>>;

    /**
     * Sends a request based on endpoint options.
     * The `route` parameter should be a string in the format of `'METHOD URL'`,
     * such as `'GET /orgs/{org}'`.
     * The `parameters` parameter is optional and can contain any additional
     * URL, query, or body parameters, headers, media type format or previews,
     * request, or base URL.
     *
     * @param route - String containing the request method and URL.
     * @param parameters - Optional object containing additional request parameters.
     * @returns A promise that resolves to the response from the Octokit API.
     */
    <R extends Route>(route: keyof Endpoints | R, options?: R extends keyof Endpoints ? Endpoints[R]["parameters"] & RequestParameters : RequestParameters): R extends keyof Endpoints ? Promise<Endpoints[R]["response"]> : Promise<OctokitResponse<any>>;

    /**
     * Returns a new `request` object with updated default options.
     *
     * @param newDefaults - Object containing the new default options.
     * @returns A new `request` object with the updated default options.
     */
    defaults<O extends RequestParameters = RequestParameters>(newDefaults: O): RequestInterface<D & O>;

    /**
     * The Octokit endpoint API, which can be used to generate endpoint URLs
     * and options for making requests to the Octokit API.
     * See {@link https://github.com/octokit/endpoint.js|@octokit/endpoint} for more information.
     */
    endpoint: EndpointInterface<D>;
}
