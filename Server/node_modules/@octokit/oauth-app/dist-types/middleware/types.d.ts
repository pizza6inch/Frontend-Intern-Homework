// Define a type named 'OctokitRequest' which represents an object containing the details of a request made using the Octokit library.
// The object has the following properties:
// - method: A string representing the HTTP method used in the request (e.g. 'GET', 'POST', 'PUT', etc.).
// - url: A string representing the URL of the request.
// - headers: An object containing the headers sent with the request. The keys are string representing the header name and the values are also strings representing the header value.
// - text: A function that returns a Promise that resolves to a string containing the response body when the request is successful.
export type OctokitRequest = {
    method: string;
    url: string;
    headers: Record<string, string>;
    text: () => Promise<string>;
};

// Define a type named 'OctokitResponse' which represents an object containing the details of a response received from an Octokit request.
// The object has the following properties:
// - status: A number representing the HTTP status code of the response.
// - headers: An optional object containing the headers received with the response. The keys are string representing the header name and the values are also strings representing the header value.
// - text: An optional function that returns a Promise that resolves to a string containing the response body when the request is successful.
export type OctokitResponse = {
    status: number;
    headers?: Record<string, string>;
    text?: string;
};

// Define a type named 'HandlerOptions' which represents an object containing optional parameters for a handler function.
// The object has the following properties:
// - pathPrefix: A string representing a prefix to be added to the path of the request.
export type HandlerOptions = {
    pathPrefix?: string;
};
