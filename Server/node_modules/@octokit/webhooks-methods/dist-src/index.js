// Import the 'sign' function from './node/sign.js' module and the 'verify' function from './node/verify.js' module
import { sign } from "./node/sign.js";
import { verify } from "./node/verify.js";

// Asynchronous function to verify a signature with a fallback mechanism
async function verifyWithFallback(secret, payload, signature, additionalSecrets) {
  // First, try to verify the signature with the provided secret
  const firstPass = await verify(secret, payload, signature);
  
  // If verification is successful, return true
  if (firstPass) {
    return true;
  }
  
  // If there are additional secrets provided, iterate through them and try to verify the signature
  if (additionalSecrets !== void 0) {
    for (const s of additionalSecrets) {
      const v = await verify(s, payload, signature);
      
      // If verification is successful, return the verification result
      if (v) {
        return v;
      }
    }
  }
  
  // If verification fails with all secrets, return false
  return false;
}

// Export 'sign', 'verify', and 'verifyWithFallback' functions for use in other modules
export {
  sign,
  verify,
  verifyWithFallback
};
