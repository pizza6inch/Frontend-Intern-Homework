/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
// This is the license information for the safe-buffer module.
// It uses the MIT License and is created by Feross Aboukhadijeh.

/* eslint-disable node/no-deprecated-api */
// This line is used to disable the eslint rule that disallows the use of deprecated APIs.

var buffer = require('buffer')
// This line imports the 'buffer' module, which provides a way to create and manipulate Buffer objects.

var Buffer = buffer.Buffer
// This line extracts the Buffer constructor from the 'buffer' module.

// alternative to using Object.keys for old browsers
// This is a comment for the function copyProps(). It explains that this function is an alternative to using Object.keys()
// for old browsers that do not support it.

function copyProps (src, dst) {
  // This is the definition of the copyProps() function. It takes two arguments, src and dst, and copies all properties
  // from src to dst.
  for (var key in src) {
    // This for loop iterates over all properties of the src object.
    dst[key] = src[key]
    // It copies the value of each property from src to dst.
  }
}

if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  // This if statement checks if all four Buffer methods are available. If they are, it exports the 'buffer' module.
  module.exports = buffer
} else {
  // If any of the Buffer methods are not available, it copies all properties from the 'buffer' module to the exports
  // object and overrides the Buffer constructor with the SafeBuffer constructor.
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  // This is the definition of the SafeBuffer constructor. It takes three arguments, arg, encodingOrOffset, and length.
  // It calls the Buffer constructor with the same arguments.
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.prototype = Object.create(Buffer.prototype)
// This line sets the prototype of the SafeBuffer constructor to a new object that inherits from the Buffer.prototype.

// Copy static methods from Buffer
// This is a comment for the copyProps() function call. It explains that this function call copies all static methods from
// the Buffer constructor to the SafeBuffer constructor.
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  // This is the definition of the SafeBuffer.from() method. It takes three arguments, arg, encodingOrOffset, and length.
  if (typeof arg
