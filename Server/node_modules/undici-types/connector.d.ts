// Import necessary modules: 'tls' for creating secure connections,
// and 'net' for creating TCP and IPC connections.
import { TLSSocket, ConnectionOptions } from 'tls'
import { IpcNetConnectOpts, Socket, TcpNetConnectOpts } from 'net'

// The main exported function, buildConnector, accepts an optional
// buildConnector.BuildOptions object and returns a buildConnector.connector function.
export default buildConnector

// Documentation for the BuildOptions type, which is a combination of
// ConnectionOptions, TcpNetConnectOpts, or IpcNetConnectOpts, with
// additional optional properties.
declare namespace buildConnector {
  export type BuildOptions = (
    ConnectionOptions |
    TcpNetConnectOpts |
    IpcNetConnectOpts
  ) & {
    allowH2?: boolean; // Optional flag to enable HTTP/2.
    maxCachedSessions?: number | null; // Optional maximum number of cached sessions.
    socketPath?: string | null; // Optional path for IPC connections.
    timeout?: number | null; // Optional connection timeout in milliseconds.
    port?: number; // Optional port number for the connection.
    keepAlive?: boolean | null; // Optional flag to enable TCP keep-alive.
    keepAliveInitialDelay?: number | null; // Optional initial delay for TCP keep-alive.
  }

  // Documentation for the Options type, which contains the required
  // properties for creating a connection.
  export interface Options {
    hostname: string // The hostname or IP address of the server.
    host?: string // The hostname or IP address of the server (alternate to hostname).
    protocol: string // The protocol to use for the connection.
    port: string // The port number for the connection.
    servername?: string // The servername to use for SNI (Server Name Indication).
    localAddress?: string | null // The local address to bind the connection to.
    httpSocket?: Socket // An existing socket to use for the connection.
  }

  // Documentation for the Callback type, which accepts variable arguments.
  export type Callback = (...args: Call
