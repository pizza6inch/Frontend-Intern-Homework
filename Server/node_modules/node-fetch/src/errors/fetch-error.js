import { FetchBaseError } from './base.js';

/**
 * Defines the @typedef SystemError which represents a system error with various properties such as address, code, dest, errno, info, message, path, port, and syscall.
 * @typedef {{ address?: string, code: string, dest?: string, errno: number, info?: object, message: string, path?: string, port?: number, syscall: string}} SystemError
 */

/**
 * FetchError class that extends FetchBaseError to represent operational errors.
 * @class
 * @param {string} message - The error message for human consumption.
 * @param {string} [type] - The error type for machine processing.
 * @param {SystemError} [systemError] - For Node.js system error.
 */
export class FetchError extends FetchBaseError {
  constructor(message, type, systemError) {
    super(message, type);

    // When err.type is `system`, err.erroredSysCall contains system error and err.code contains system error code
    if (systemError) {
      // eslint-disable-next-line no-multi-assign
      this.code = this.errno = systemError.code;
      this.erroredSysCall = systemError.syscall;
    }
  }
}
