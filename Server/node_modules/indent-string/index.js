'use strict';

// The function exports a function that takes in a string, a count (default is 1),
// and options object.
module.exports = (string, count = 1, options) => {
  // Set default indent value to a single space
  options = {
    indent: ' ',
    includeEmptyLines: false,
    ...options
  };

  // Check if the input is a string
  if (typeof string !== 'string') {
    throw new TypeError(
      `Expected `input` to be a `string`, got `${typeof string}``
    );
  }

  // Check if the count is a number
  if (typeof count !== 'number') {
    throw new TypeError(
      `Expected `count` to be a `number`, got `${typeof count}``
    );
  }

  // Check if the indent is a string
  if (typeof options.indent !== 'string') {
    throw new TypeError(
      `Expected `options.indent` to be a `string`, got `${typeof options.indent}``
    );
  }

  // If count is 0, return the string
  if (count === 0) {
    return string;
  }

  // Set regex based on the includeEmptyLines option
  const regex = options.includeEmptyLines ? /^/gm : /^(?!\s*$)/gm;

  // Replace the matches in the string with the specified number of indents
  return string.replace(regex, options.indent.repeat(count));
};
