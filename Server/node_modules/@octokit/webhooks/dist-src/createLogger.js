// The 'createLogger' function takes in a 'logger' object as its parameter.
const createLogger = (logger) => ({

  // The 'debug' method of the returned object does not contain any implementation.
  debug: () => {
  },

  // The 'info' method of the returned object does not contain any implementation.
  info: () => {
  },

  // The 'warn' method binds the 'console.warn' method to the 'console' object,
  // allowing it to be called with the same context as the 'console' object.
  warn: console.warn.bind(console),

  // The 'error' method binds the 'console.error' method to the 'console' object,
  // allowing it to be called with the same context as the 'console' object.
  error: console.error.bind(console),

  // The '...' syntax is used to spread the 'logger' object's properties
  // onto the returned object, effectively adding any additional methods
  // provided in the 'logger' object to the returned object.
  ...logger

});

// The 'createLogger' function is exported for use in other modules.
export {
  createLogger
};
