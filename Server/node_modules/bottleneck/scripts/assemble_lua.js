// Import the 'fs' module for file system operations
var fs = require('fs')

// Set the input directory to the 'redis' directory inside the parent directory of the current script
var input = __dirname + '/../src/redis'

// Initialize the 'loaded' object to store the contents of the processed files
var loaded = {}

// Read all files in the input directory and process them asynchronously using Promises
var promises = fs.readdirSync(input).map(function (file) {
  // Create a new Promise for each file
  return new Promise(function (resolve, reject) {
    // Read the file asynchronously and pass a callback function to handle the result
    fs.readFile(input + '/' + file, function (err, data) {
      if (err) {
        // If there's an error, reject the Promise with the error
        return reject(err)
      }

      // If the file is read successfully, store its content in the 'loaded' object
      loaded[file] = data.toString('utf8')

      // Resolve the Promise, indicating that the operation is complete
      return resolve()
    })
  })
})

// Wait for all Promises to be resolved or for any Promise to be rejected
Promise.all(promises)
  .then(function () {
    // Once all Promises are resolved, print the 'loaded' object in a sorted and formatted manner
    console.log(JSON.stringify(loaded, Object.keys(loaded).sort(), 2))
  })
  .catch(function (err) {
    // If any Promise is rejected, print the error and exit the process
    console.error(err)
    process.exit(1)
  })
