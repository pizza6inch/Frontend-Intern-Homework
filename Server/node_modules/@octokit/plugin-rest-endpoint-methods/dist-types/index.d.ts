import type { Octokit } from "@octokit/core";
export type { RestEndpointMethodTypes } from "./generated/parameters-and-response-types.js";

// This line exports an `Api` type from "./types.js" file.
// It is used later in the file to define the types of the `restEndpointMethods` and `legacyRestEndpointMethods` functions.
export type { Api } from "./types.js";

// This function takes an instance of `Octokit` class and returns an object containing various GitHub REST API methods.
// The `octokit` instance is used to make authenticated requests to GitHub API.
// The returned object conforms to the `Api` type exported from "./types.js" file.
export declare function restEndpointMethods(octokit: Octokit): Api;

// This namespace contains a single property `VERSION` which specifies the version of the REST API methods.
export declare namespace restEndpointMethods {
    var VERSION: string;
}

// This function is similar to `restEndpointMethods` but returns an object that contains both the REST API methods and the legacy REST API methods.
// The `octokit` instance is used to make authenticated requests to GitHub API.
// The returned object conforms to the `Api["rest"] & Api` type, which means it contains all the properties of both `Api["rest"]` and `Api`.
export declare function legacyRestEndpointMethods(octokit: Octokit): Api["rest"] & Api;

// This namespace contains a single property `VERSION` which specifies the version of the legacy REST API methods.
export declare namespace legacyRestEndpointMethods {
    var VERSION: string;
}
