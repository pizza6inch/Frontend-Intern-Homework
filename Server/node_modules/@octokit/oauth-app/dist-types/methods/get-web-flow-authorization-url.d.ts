import * as OAuthMethods from "@octokit/oauth-methods";
import type { ClientType, State } from "../types.js";

// Define a type for options that will be used with the GetWebFlowAuthorizationUrl function,
// excluding options that are specific to State, ClientType, ClientId, ClientSecret, and Request.
type StateOptions = "clientType" | "clientId" | "clientSecret" | "request";

// Define a type for options that will be used with the GetWebFlowAuthorizationUrl function for OAuth App.
export type GetWebFlowAuthorizationUrlOAuthAppOptions = Omit<OAuthMethods.GetWebFlowAuthorizationUrlOAuthAppOptions, StateOptions>;

// Define a type for options that will be used with the GetWebFlowAuthorizationUrl function for GitHub App.
export type GetWebFlowAuthorizationUrlGitHubAppOptions = Omit<OAuthMethods.GetWebFlowAuthorizationUrlGitHubAppOptions, StateOptions>;

// Define a type for the getWebFlowAuthorizationUrlWithState function that accepts state and options as arguments
// and returns any type.
export declare function getWebFlowAuthorizationUrlWithState(state: State, options: any): any;

// Define an interface for the GetWebFlowAuthorizationUrl function that accepts options as an argument
// and returns a result type that depends on the ClientType.
export interface GetWebFlowAuthorizationUrlInterface<TClientType extends ClientType> {
    // Define a function that accepts options as an argument and returns a result type that depends on the ClientType.
    (options: TClientType extends "oauth-app" ? GetWebFlowAuthorizationUrlOAuthAppOptions : GetWebFlowAuthorizationUrlGitHubAppOptions): TClientType extends "oauth-app" ? OAuthMethods.GetWebFlowAuthorizationUrlOAuthAppResult : OAuthMethods.GetWebFlowAuthorizationUrlGitHubAppResult;
}

// Define an empty export statement to prevent any other top-level declarations from being exported.
export {};
