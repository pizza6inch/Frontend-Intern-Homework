'use strict';

// Importing the 'tape' module, which is a test harness for TAP-producing test
// scripts. It provides a simple and flexible API for writing tests and
// test groups.
var test = require('tape');

// Importing several modules from the ../ directory, which are being tested in
// this script.
var E = require('../errors/Error');
var R = require('../errors/RangeError');
var Ref = require('../errors/ReferenceError');
var S = require('../errors/SyntaxError');
var T = require('../errors/TypeError');

// The 'test' function is called with a single argument - a function that
// configures the test. This function accepts a 't' parameter, which is an
// instance of the Tape object and provides methods for asserting test
// outcomes.
test('errors', function (t) {
  // The 'equal' method is called on the 't' object to check if the 'E' variable
  // is equal to the Error global object.
  t.equal(E, Error, 'E should be equal to the Error global object');
  
  // The 'equal' method is called on the 't' object to check if the 'R' variable
  // is equal to the RangeError global object.
  t.equal(R, RangeError, 'R should be equal to the RangeError global object');
  
  // The 'equal' method is called on the 't' object to check if the 'Ref' variable
  // is equal to the ReferenceError global object.
  t.equal(Ref, ReferenceError, 'Ref should be equal to the ReferenceError global object');
  
  // The 'equal' method is called on the 't' object to check if the 'S' variable
  // is equal to the SyntaxError global object.
  t.equal(S, SyntaxError, 'S should be equal to the SyntaxError global object');
  
  // The 'equal' method is called on the 't' object to check if the 'T' variable
  // is equal to the TypeError global object.
  t.equal(T
