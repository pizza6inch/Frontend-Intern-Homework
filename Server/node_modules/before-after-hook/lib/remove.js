// Exports the removeHook function to be used in other modules
module.exports = removeHook;

/**
 * Removes a specified hook by name and method from the state registry.
 * If the hook does not exist in the registry, the function returns without making any changes.
 *
 * @param {Object} state - The state object containing the registry of hooks.
 * @param {string} name - The name of the hook to be removed.
 * @param {Function} method - The method of the hook to be removed.
 */
function removeHook(state, name, method) {
  // Check if the hook exists in the registry by name
  if (!state.registry[name]) {
    // If the hook does not exist, return without making any changes
    return;
  }

  // Find the index of the method in the hook array
  var index = state.registry[name]
    .map(function (registered) {
      // Map the hook array to contain only the original methods
      return registered.orig;
    })
    .indexOf(method);

  // If the method is not found in the hook array, return without making any changes
  if (index === -1) {
    return;
  }

  // Remove the hook with the specified method from the hook array
  state.registry[name].splice(index, 1);
}

