'use strict';

// Import required modules
var test = require('tape');
var getSideChannel = require('../');

// Begin test suite for the 'export' function
test('export', function (t) {
  // Assert that getSideChannel is a function and takes no arguments
  t.equal(typeof getSideChannel, 'function', 'is a function');
  t.equal(getSideChannel.length, 0, 'takes no arguments');

  // Initialize a new side channel
  var channel = getSideChannel();
  // Assert that the channel is truthy and is an object
  t.ok(channel, 'is truthy');
  t.equal(typeof channel, 'object', 'is an object');

  // End the test suite
  t.end();
});

// Begin test suite for the 'assert' function
test('assert', function (t) {
  // Initialize a new side channel
  var channel = getSideChannel();

  // Assert that passing a non-existent value throws a TypeError
  t['throws'](
    function () { channel.assert({}); },
    TypeError,
    'nonexistent value throws'
  );

  // Initialize a new object and set its value on the side channel
  var o = {};
  channel.set(o, 'data');
  // Assert that passing an existent value does not throw an error
  t.doesNotThrow(function () { channel.assert(o); }, 'existent value noops');

  // End the test suite
  t.end();
});

// Begin test suite for the 'has' function
test('has', function (t) {
  // Initialize a new side channel
  var channel = getSideChannel();
  var o = [];

  // Assert that the side channel does not have a value for the array
  t.equal(channel.has(o), false, 'nonexistent value yields false');

  // Set a value for the array on the side channel
  channel.set(o, 'foo');
  // Assert that the side channel has a value for the array
  t.equal(channel.has(o), true, 'existent value yields true');

  // Assert that the side channel does not have a value for a non-object value
  t.equal(channel.has('abc'), false, 'non object value non existent yields false');

  // Set a value for the string on the side channel
  channel.set('abc', 'foo');
  // Assert that the side channel has a value for the string
  t.equal(channel.has('abc'), true, 'non object value that exists yields true');

  // End the test suite
  t.end();
});

// Begin test suite for the 'get' function
test('get', function (t) {
  // Initialize a new side channel
  var channel = getSideChannel();
  var o = {};
  // Assert that the side channel does not have a value for the object
  t.equal(channel.get(o), undefined, 'nonexistent value yields undefined');

  // Set a value for the object on the side channel
  var data = {};
  channel.set(o, data);
  // Assert that the 'get' function yields the data set by the '
