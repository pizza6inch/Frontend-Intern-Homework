'use strict';

// Importing the es-define-property module to check if property descriptors are supported
var $defineProperty = require('es-define-property');

// Function to check if property descriptors are supported in the current environment
var hasPropertyDescriptors = function hasPropertyDescriptors() {
  // Check if the $defineProperty variable is defined, which indicates support for property descriptors
  return !!$defineProperty;
};

// Function to check if there's a bug in the array length define property in the current environment
hasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {
  // If $defineProperty is not defined, it means property descriptors are not supported, so return null
  if (!$defineProperty) {
    return null;
  }

  // Try-catch block to handle exceptions when defining length on an array
  try {
    // Define a new property 'length' on an array with a value of 1
    const arrayWithLengthOne = $defineProperty([], 'length', { value: 1 });

    // Check if the length of the array is actually 1
    return arrayWithLengthOne.length !== 1;
  } catch (e) {
    // In Firefox 4-22, defining length on an array throws an exception
    return true;
  }
};

// Exporting the hasPropertyDescriptors function to be used in other modules
module.exports = hasPropertyDescriptors;

