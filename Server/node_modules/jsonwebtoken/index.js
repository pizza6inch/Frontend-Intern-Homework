// This module exports several functions and classes related to JSON Web Tokens (JWT)

// The 'decode' function is used to decode a JWT string into its component parts
// (header, payload, and signature). It does not verify the signature or check
// for token expiration.
module.exports.decode = require('./decode');

// The 'verify' function is used to verify a JWT's signature and check that it has
// not expired. It takes a JWT string and a secret or key as arguments.
module.exports.verify = require('./verify');

// The 'sign' function is used to create a new JWT string. It takes a payload
// object and a secret or key as arguments, and can optionally take additional
// parameters to set the token's expiration time and other properties.
module.exports.sign = require('./sign');

// The 'JsonWebTokenError' class is used to represent errors that occur during
// the JWT signing or verification process.
module.exports.JsonWebTokenError = require('./lib/JsonWebTokenError');

// The 'NotBeforeError' class is used to represent errors that occur when a JWT
// is attempted to be verified before its "not before" time has been reached.
module.exports.NotBeforeError = require('./lib/NotBeforeError');

// The 'TokenExpiredError' class is used to represent errors that occur when a JWT
// has expired and can no longer be verified.
module.exports.TokenExpiredError = require('./lib/TokenExpiredError');
