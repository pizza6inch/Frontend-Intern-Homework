'use strict';

// Import the 'tape' module for test assertions
var test = require('tape');

// Check if the environment has native Symbol support
if (typeof Symbol === 'function' && typeof Symbol() === 'symbol') {
	test('has native Symbol support', function (t) {
		// Check if 'Symbol' is a function
		t.equal(typeof Symbol, 'function');
		// Check if 'Symbol()' returns a symbol
		t.equal(typeof Symbol(), 'symbol');
		// End the test
		t.end();
	});
	// Return early to avoid executing the polyfilled code
	return;
}

// Import the 'hasSymbols' utility from '../../shams'
// This utility checks if Symbols are supported in the environment
var hasSymbols = require('../../shams');

// Start the test for polyfilled Symbols
test('polyfilled Symbols', function (t) {
	/* eslint-disable global-require */
	// Check the initial value of 'hasSymbols'
	t.equal(hasSymbols(), false, 'hasSymbols is false before polyfilling');

	// Import the 'get-own-property-symbols' polyfill
	require('get-own-property-symbols');

	// Import and run the test suite for Symbols
	require('../tests')(t);

	// Check the updated value of 'hasSymbols'
	var hasSymbolsAfter = hasSymbols();
	t.equal(hasSymbolsAfter, true, 'hasSymbols is true after polyfilling');
	/* eslint-enable global-require */
	// End the test
	t.end();
});

