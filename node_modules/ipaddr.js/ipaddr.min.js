(function(){ /* Begin anonymous function scope */

var r, t, n, e, i, o, a, s; /* Variable declarations */

t = {}; /* Create an empty object */

s = this; /* Store the global object (either window or global) */

/* If module.exports is defined, export the t object as a module */
/* Otherwise, attach the IPv4 methods to the global object */
module.exports = t || s.ipaddr = t;

a = function(r, t, n, e) { /* Function to compare two arrays */
  ...
};

t.subnetMatch = function(r, t, n) { /* Function to find a subnet match */
  ...
};

t.IPv4 = function() { /* Constructor for IPv4 addresses */
  ...
};

r.prototype.kind = function() { /* Method to get address kind */
  ...
};

r.prototype.toString = function() { /* Method to convert address to string */
  ...
};

r.prototype.toNormalizedString = function() { /* Method to convert address to normalized string */
  ...
};

r.prototype.toByteArray = function() { /* Method to convert address to byte array */
  ...
};

r.prototype.match = function(r, t) { /* Method to compare two addresses */
  ...
};

r.prototype.SpecialRanges = { /* Object containing special IPv4 ranges */
  ...
};

r.prototype.range = function() { /* Method to get address range */
  ...
};

r.prototype.toIPv4MappedAddress = function() { /* Method to convert IPv4 to IPv4-mapped IPv6 address */
  ...
};

r.prototype.prefixLengthFromSubnetMask = function() { /* Method to get prefix length from subnet mask */
  ...
};

...

}).call(this); /* End anonymous function scope and execute it */
