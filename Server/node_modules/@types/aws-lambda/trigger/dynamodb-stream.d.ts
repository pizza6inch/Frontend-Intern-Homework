import { Handler } from "../handler";

// Define the type for DynamoDBStreamHandler, which is a handler for DynamoDB Stream events.
// This type is a generic that takes two types: DynamoDBStreamEvent (the input event type)
// and DynamoDBBatchResponse or void (the response type).
// The '@typescript-eslint/no-invalid-void-type' rule is disabled here because void is a valid type for the response.
export type DynamoDBStreamHandler = Handler<DynamoDBStreamEvent, DynamoDBBatchResponse | void>;

// Define the AttributeValue interface, which represents a single attribute value in a DynamoDB item.
// The interface contains various properties, each representing a different data type that can be stored in DynamoDB.
// The 'B' property represents a binary data type, 'BS' represents a list of binary data, 'BOOL' represents a boolean value,
// 'L' represents a list of attribute values, 'M' represents a map of attribute values, 'N' represents a number value,
// 'NS' represents a list of number values, 'NULL' represents a null value, 'S' represents a string value, and 'SS' represents a list of string values.
export interface AttributeValue {
    B?: string | undefined;
    BS?: string[] | undefined;
    BOOL?: boolean | undefined;
    L?: AttributeValue[] | undefined;
    M?: { [id: string]: AttributeValue } | undefined;
    N?: string | undefined;
    NS?: string[] | undefined;
    NULL?: boolean | undefined;
    S?: string | undefined;
    SS?: string[] | undefined;
}

// Define the StreamRecord interface, which represents a single record in a DynamoDB stream.
// The interface contains various properties, each representing a different aspect of the record.
// The 'ApproximateCreationDateTime' property represents the approximate time when the record was created.
// The 'Keys' property represents the primary key of the item that was modified.
// The 'NewImage' property represents the updated image of the item.
// The 'OldImage' property represents the previous image of the item.
// The 'SequenceNumber' property represents the sequence number of the record.
// The 'SizeBytes' property represents the size of the record in bytes.
// The 'StreamViewType' property represents the view type of the record.
export interface StreamRecord {
    ApproximateCreationDateTime?: number | undefined;
    Keys?: { [key: string]: AttributeValue } | undefined;
    NewImage?: { [key: string]: AttributeValue } | undefined;
    OldImage?: { [key: string]: AttributeValue } | undefined;
    SequenceNumber?: string | undefined;
    SizeBytes?: number | undefined;
    StreamViewType?: "KEYS_ONLY" | "NEW_IMAGE" | "OLD_IMAGE" | "NEW_AND_OLD_IMAGES" | undefined;
}

// Define the DynamoDBRecord interface, which represents a single record in a DynamoDB stream event.
// The interface contains various properties, each representing a different aspect of the record.
// The 'awsRegion' property represents the AWS region where the record was created.
// The 'dynamodb' property represents the DynamoDB record.
// The 'eventID' property represents the ID of the event.
// The 'eventName' property represents the name of the event (INSERT, MODIFY, or REMOVE).
// The 'eventSource' property represents the source of the event.
// The 'eventSourceARN' property
