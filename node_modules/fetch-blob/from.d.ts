// Default export is the synchronous version of blobFromSync function
export default blobFromSync;

/**
 * Creates a Blob object from the file at the given path.
 * Optionally, you can specify the mimetype to use.
 *
 * @param {string} path - The filepath of the file on the disk.
 * @param {string} [type] - The mimetype to use for the Blob. If not provided,
 *                          the mimetype will be detected automatically.
 * @returns {Blob} - A Blob object representing the file at the given path.
 */
export function blobFromSync(path: string, type?: string): Blob;


/**
 * Creates a Promise that resolves to a Blob object from the file at the given path.
 * Optionally, you can specify the mimetype to use.
 *
 * @param {string} path - The filepath of the file on the disk.
 * @param {string} [type] - The mimetype to use for the Blob. If not provided,
 *                          the mimetype will be detected automatically.
 * @returns {Promise<Blob>} - A Promise that resolves to a Blob object
 *                            representing the file at the given path.
 */
export function blobFrom(path: string, type?: string): Promise<Blob>;


/**
 * Creates a Promise that resolves to a File object from the file at the given path.
 * Optionally, you can specify the mimetype to use.
 *
 * @param {string} path - The filepath of the file on the disk.
 * @param {string} [type] - The mimetype to use for the File. If not provided,
 *                          the mimetype will be detected automatically.
 * @returns {Promise<File>} - A Promise that resolves to a File object
 *                            representing the file at the given path.
 */
export function fileFrom(path: string, type?: string): Promise<File>;

