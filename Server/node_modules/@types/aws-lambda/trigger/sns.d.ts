import { Handler } from "../handler";

// Define the type for an AWS Lambda function that handles SNS events
export type SNSHandler = Handler<SNSEvent, void>;

// Define the interface for a single message attribute in an SNS message
export interface SNSMessageAttribute {
    // The type of the attribute (e.g. "String", "Number", etc.)
    Type: string;
    // The value of the attribute
    Value: string;
}

// Define the interface for a map of message attributes in an SNS message
export interface SNSMessageAttributes {
    // A key-value pair where the key is the name of the attribute and the value is its definition
    [name: string]: SNSMessageAttribute;
}

// Define the interface for an SNS message
export interface SNSMessage {
    // The version of the signature used to sign the message
    SignatureVersion: string;
    // The timestamp of when the message was sent
    Timestamp: string;
    // The signature of the message
    Signature: string;
    // The URL of the signing certificate
    SigningCertUrl: string;
    // The unique identifier for the message
    MessageId: string;
    // The actual message content
    Message: string;
    // A map of message attributes
    MessageAttributes: SNSMessageAttributes;
    // The type of the message (e.g. "Notification", "SubscriptionConfirmation", etc.)
    Type: string;
    // The URL to unsubscribe from the topic
    UnsubscribeUrl: string;
    // The Amazon Resource Name (ARN) of the topic
    TopicArn: string;
    // The subject of the message, if applicable
    Subject?: string;
    // The token for the message, if applicable
    Token?: string;
}

// Define the interface for an SNS event record
export interface SNSEventRecord {
    // The version of the event record
    EventVersion: string;
    // The Amazon Resource Name (ARN) of the event subscription
    EventSubscriptionArn: string;
    // The source of the event (always "sns" for SNS events)
