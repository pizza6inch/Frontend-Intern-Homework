import { createOAuthUserAuth } from "@octokit/auth-oauth-user";
import { emitEvent } from "../emit-event.js";

// The getUserOctokitWithState function takes in two parameters: state and options.
// It returns an instance of Octokit, an authenticated GitHub API client.
async function getUserOctokitWithState(state, options) {
  // The state.octokit.auth method is called with the type set to "oauth-user" and the options parameter.
  // This method returns an authentication object.
  return state.octokit.auth({
    type: "oauth-user",
    ...options,
    // The factory method is called with the options2 parameter.
    // This method returns an instance of Octokit.
    async factory(options2) {
      // A new instance of Octokit is created with the authentication strategy set to createOAuthUserAuth
      // and the auth options set to options2.
      const octokit = new state.Octokit({
        authStrategy: createOAuthUserAuth,
        auth: options2
      });
      // The auth method is called with the type set to "get".
      // This method returns the authentication details.
      const authentication = await octokit.auth({
        type: "get"
      });
      // The emitEvent function is called with the state, event details, and the authentication object.
      await emitEvent(state, {
        name: "token",
        action: "created",
        token: authentication.token,
        scopes: authentication.scopes,
        authentication,
        octokit
      });
      // The octokit instance is returned.
      return octokit;
    }
  });
}

// The getUserOctokitWithState function is exported for use in other modules.
export {
  getUserOctokitWithState
};
