import * as OAuthMethods from "@octokit/oauth-methods";

/**
 * Checks the validity of a GitHub OAuth token with an optional state object.
 * This function uses the `checkToken` method from the `@octokit/oauth-methods` library.
 *
 * @param {object} state - An object containing the following properties:
 *   - clientType: The type of OAuth client (e.g. "app" or "user-to-server").
 *   - clientId: The ID of the OAuth client.
 *   - clientSecret: The secret key of the OAuth client.
 *   - octokit: An instance of the Octokit GitHub API client.
 * @param {object} options - Additional options to pass to the `checkToken` method.
 * @returns {Promise} A Promise that resolves to an object containing the authentication details for the token.
 */
async function checkTokenWithState(state, options) {
  const result = await OAuthMethods.checkToken({
    // TypeScript expects all properties to be explicitly defined,
    // but we're ignoring this error because the `clientType` property
    // is dynamically generated based on the `state` object.
    // @ts-expect-error not worth the extra code to appease TS
    clientType: state.clientType,
    clientId: state.clientId,
    clientSecret: state.clientSecret,
    request: state.octokit.request,
    ...options
  });

  // Adds the `type` and `tokenType` properties to the authentication object.
  Object.assign(result.authentication, { type: "token", tokenType: "oauth" });

  // Returns the result object.
  return result;
}

// Exports the `checkTokenWithState` function for use in other modules.
export {
  checkTokenWithState
};
