'use strict';

// Import the 'function-bind' module, which provides a `bind` function for binding
// methods to a specific `this` value.
const bind = require('function-bind');

// The `call` method is a built-in method of the Function prototype that invokes
// a function with a given `this` value and arguments provided individually.
const call = Function.prototype.call;

// The `hasOwnProperty` method is a built-in method of the Object prototype that
// returns a boolean indicating whether the object has the specified property as
// an own (not inherited) property.
const $hasOwn = Object.prototype.hasOwnProperty;

/**
 * This module exports a function that is bound to the `call` method of the
 * Function prototype and the `hasOwnProperty` method of the Object prototype.
 * This allows the function to be used as a method of any object, with the
 * `this` value set to the object on which the function is called.
 *
 * @type {Function}
 */
module.exports = bind.call(call, $hasOwn);
