import type {  /* importing necessary types for OAuthAppStrategy and GitHubAppStrategy */ } from "@octokit/auth-oauth-user";
import type { State, OctokitInstance, ClientType } from "../types.js"; // importing types from local types.js file

type StateOptions = "clientType" | "clientId" | "clientSecret" | "request"; // defining a type for state options

export type GetUserOctokitOAuthAppOptions =  // defining a type for GetUserOctokitOAuthAppOptions
    Omit<OAuthAppStrategyOptionsWebFlow, StateOptions> // using Omit utility type to exclude StateOptions from OAuthAppStrategyOptionsWebFlow
    | Omit<OAuthAppStrategyOptionsDeviceFlow, StateOptions> // using Omit utility type to exclude StateOptions from OAuthAppStrategyOptionsDeviceFlow
    | Omit<OAuthAppStrategyOptionsExistingAuthentication, StateOptions>; // using Omit utility type to exclude StateOptions from OAuthAppStrategyOptionsExistingAuthentication

export type GetUserOctokitGitHubAppOptions = // defining a type for GetUserOctokitGitHubAppOptions
    Omit<GitHubAppStrategyOptionsWebFlow, StateOptions> // using Omit utility type to exclude StateOptions from GitHubAppStrategyOptionsWebFlow
    | Omit<GitHubAppStrategyOptionsDeviceFlow, StateOptions> // using Omit utility type to exclude StateOptions from GitHubAppStrategyOptionsDeviceFlow
    | Omit<GitHubAppStrategyOptionsExistingAuthentication, StateOptions> // using Omit utility type to exclude StateOptions from GitHubAppStrategyOptionsExistingAuthentication
    | Omit<GitHubAppStrategyOptionsExistingAuthenticationWithExpiration, StateOptions>; // using Omit utility type to exclude StateOptions from GitHubAppStrategyOptionsExistingAuthenticationWithExpiration

// defining a function to get User Octokit with State
export declare function getUserOctokitWithState(state: State, options: GetUserOctokitOAuthAppOptions | GetUserOctokitGitHubAppOptions): Promise<import("@octokit/core").Octokit>;

// defining an interface for GetUserOctokitWithStateInterface
export interface GetUserOctokitWithStateInterface<TClientType extends ClientType> {
    (options: TClientType extends "oauth-app" ? GetUserOctokitOAuthAppOptions : GetUserOctokitGitHubAppOptions): Promise<Octokit
