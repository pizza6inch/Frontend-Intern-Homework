/*jshint node:true */
'use strict';

// Require the bufferEq function from the index.js file in the same directory
var bufferEq = require('./index');

// Require the assert module for testing
var assert = require('assert');

// Start the test suite for the buffer-equal-constant-time package
describe('buffer-equal-constant-time', function() {
  // Create three Buffer objects for testing
  var a = new Buffer('asdfasdf123456');
  var b = new Buffer('asdfasdf123456');
  var c = new Buffer('asdfasdf');

  // Start the test suite for the bufferEq function
  describe('bufferEq', function() {
    // Test case: check if buffers a and b are equal
    it('says a == b', function() {
      // Use the assert.strictEqual function to check if the bufferEq function returns true
      assert.strictEqual(bufferEq(a, b), true);
    });

    // Test case: check if buffers a and c are not equal
    it('says a != c', function() {
      // Use the assert.strictEqual function to check if the bufferEq function returns false
      assert.strictEqual(bufferEq(a, c), false);
    });
  });

  // Test suite for the install/restore functionality
  describe('install/restore', function() {
    // Use the before hook to install the bufferEq function before each test in this suite
    before(function() {
      bufferEq.install();
    });

    // Use the after hook to restore the original Buffer prototype after each test in this suite
    after(function() {
      bufferEq.restore();
    });

    // Test case: check if the install method added an .equal method to the Buffer prototype
    it('installed an .equal method', function() {
      // Require the SlowBuffer object for testing
      var SlowBuffer = require('buffer').SlowBuffer;

      // Check if the .equal method exists on both Buffer and SlowBuffer objects
      assert.ok(Buffer.prototype.equal);

